---
title: 'From model to meaning'
format:
  html:
    df-print: paged
---

## Additional resources

-   <https://rvlenth.github.io/emmeans/>

-   <https://youtu.be/_okuMw4JFfU>

-   <https://youtu.be/cqmMNR6x73g>

## Setup environment

```{r}
#| output: false
library(tidyverse)
library(emmeans)
library(sjPlot)

theme_set(theme_test())
```

## Read and prep data

### `cars` dataset

A data frame with 32 observations on 11 (numeric) variables.

|        |                                          |
|:-------|:-----------------------------------------|
| `mpg`  | Miles/(US) gallon                        |
| `cyl`  | Number of cylinders                      |
| `disp` | Displacement (cu.in.)                    |
| `hp`   | Gross horsepower                         |
| `drat` | Rear axle ratio                          |
| `wt`   | Weight (1000 lbs)                        |
| `qsec` | 1/4 mile time                            |
| `vs`   | Engine (0 = V-shaped, 1 = straight)      |
| `am`   | Transmission (0 = automatic, 1 = manual) |
| `gear` | Number of forward gears                  |
| `carb` | Number of carburetors                    |

```{r}
cars <- mtcars |>
  mutate(cyl = factor(cyl),
         vs = factor(vs),
         am = factor(am),
         gear = factor(gear),
         carb = factor(carb)) |> 
  rownames_to_column("car")

cars
```

### `wages` dataset

```{r}
set.seed(10)

wages <- ISLR::Wage |>
    mutate(age_cat = case_when(
    age < 40 ~ "1. Young",
    TRUE     ~ "2. Old"
  )) |> 
  slice_sample(n = 50, by = jobclass)

wages
```

## Better summaries

```{r}
m <- lm(mpg ~ cyl, data = cars)

supernova::supernova(m)
```

```{r}
summary(m)
```

```{r}
plot_model(m, type = "pred", terms = "cyl", show.data = TRUE, jitter = TRUE) + expand_limits(y = 0)
```

```{r}
emm <- emmeans(m, "cyl") # or emmeans(model, ~ cyl)

emm
```

```{r}
contrast(emm, "pairwise") # or pairs(emm)
```

```{r}
pairs(emm) |> plot()
```

```{r}
emmeans(m, pairwise ~ cyl)
```

## Means in estimated marginal means does not mean average

It could be medians, probabilities/proportions, etc.

```{r}
m <- glm(am ~ cyl, data = cars, family = binomial)

supernova::supernova(m)
```

```{r}
summary(m)
```

```{r}
emm <- emmeans(m, "cyl", type = "response")

emm
```

## Reference grid

```{r}
m <- lm(mpg ~ gear + am + hp, data = cars)
```

```{r}
ref_grid(m)
```

```{r}
mean(cars$hp)
```

```{r}
ref_grid(m) |> as_tibble()
```

## One categorical predictor

```{r}
m <- lm(mpg ~ cyl, data = cars)
```

```{r}
ref_grid(m)
```

```{r}
ref_grid(m) |> as_tibble()
```

```{r}
emmeans(m, "cyl")
```

```{r}
emmeans(m, "cyl") |> contrast("pairwise")
```

```{r}
emmeans(m, pairwise ~ cyl)
```

```{r}
emmeans(m, pairwise ~ cyl, infer = TRUE)
```

```{r}
emmeans(m, "cyl") |> pwpm()
```

```{r}
emmeans(m, "cyl") |> contrast("pairwise") |> plot(comparisons = TRUE)
```

## One numeric predictor

```{r}
m <- lm(mpg ~ hp, data = cars)
```

```{r}
ref_grid(m)
```

```{r}
ref_grid(m) |> as_tibble()
```

```{r}
emmeans(m, "hp")
```

```{r}
emmeans(m, "hp", cov.reduce = fivenum)
```

```{r}
emmeans(m, "hp", at = list(hp = fivenum(cars$hp)))
```

```{r}
ref_grid(m, cov.reduce = fivenum) |> as_tibble()
```

```{r}
m <- lm(mpg ~ poly(hp, 2), data = cars)

plot_model(m, type = "pred", show.data = TRUE)
```

```{r}
emmeans(m, "hp", at = list(hp = c(100, 200, 300)))
```

```{r}
emmeans(m, pairwise ~ hp, at = list(hp = c(100, 200, 300)))
```

```{r}
emmeans(m, "hp", at = list(hp = c(100, 200, 300))) |> contrast("pairwise") |> plot(comparisons = TRUE)
```

## One categorical and one numeric predictor

```{r}
m <- lm(wage ~ jobclass + age, data = wages)
```

```{r}
ref_grid(m)
```

```{r}
ref_grid(m) |> as_tibble()
```

```{r}
emmeans(m, "jobclass")
```

```{r}
emmeans(m, "age", by = "jobclass", at = list(age = c(25, 45, 65)))
```

```{r}
emmeans(m, ~ age | jobclass, at = list(age = c(25, 45, 65)))
```

## Two categorical predictors

```{r}
m <- lm(mpg ~ am + cyl, data = cars)
```

```{r}
ref_grid(m)
```

```{r}
ref_grid(m) |> as_tibble()
```

```{r}
emmeans(m, "cyl")
```

```{r}
emmeans(m, ~ cyl | am)
```

## Two numeric predictors

```{r}
m <- lm(mpg ~ hp + wt, data = cars)
```

```{r}
ref_grid(m)
```

```{r}
ref_grid(m) |> as_tibble()
```

```{r}
emmeans(m, "hp")
```

```{r}
emmeans(m, "wt")
```

```{r}
emmeans(m, "wt", by = "hp")
```

```{r}
ref_grid(m, cov.reduce = range)
```

```{r}
emmeans(m, "hp", cov.reduce = range)
```

```{r}
emmeans(m, "wt", cov.reduce = range)
```

```{r}
emmeans(m, "wt", by = "hp", cov.reduce = range)
```

### without interaction

```{r}
lm(mpg ~ hp + wt, data = cars) |>
  plot_model(type = "pred", terms = c("wt", "hp[52, 335]"))
```

```{r}
lm(mpg ~ hp + wt, data = cars) |> 
  emmeans(pairwise ~ wt | hp, cov.reduce = range)
```

### with interaction

```{r}
lm(mpg ~ hp * wt, data = cars) |>
  plot_model(type = "pred", terms = c("wt", "hp[52, 335]"))
```

```{r}
lm(mpg ~ hp * wt, data = cars) |> 
  emmeans(pairwise ~ wt | hp, cov.reduce = range)
```

## Don't ignore interactions
